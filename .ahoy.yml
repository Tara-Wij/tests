---
ahoyapi: v2

commands:
  up:
    usage: Build project.
    cmd: |
      ahoy start-services
      docker compose up -d "$@"

  down:
    usage: Delete project.
    cmd: docker compose down

  build:
    usage: Build project.
    cmd: |
      docker compose build "$@"

  restart:
    usage: Restart Docker containers.
    cmd: docker compose restart

  stop:
    usage: Stop Docker containers.
    cmd: docker compose stop "$@"

  watch:
    usage: Use Compose Watch for live development.
    cmd: docker compose watch

  cli:
    usage: Start a shell.
    cmd: docker compose exec govcms bash

  composer:
    usage: Start a composer command.
    cmd: docker compose exec govcms composer "$@"

  rector:
    usage: Analyze your code with Rector and review suggested changes.
    cmd: docker compose exec govcms rector "$@"

  phpunit:
    usage: Run PHPUnit tests.
    cmd: docker compose exec govcms phpunit -c web/core "$@"

  phpunit-govcms:
    usage: Run PHPUnit tests.
    cmd: |
      docker compose exec govcms composer dump-autoload
      docker compose exec govcms phpunit -c web/core tests/phpunit/tests/GovCMS --testdox

  phpunit-govcms-baseline:
    usage: Run PHPUnit baseline tests.
    cmd: |
      docker compose exec govcms composer dump-autoload
      docker compose exec govcms phpunit -c web/core tests/phpunit/tests/GovCMS/Baseline --testdox

  phpunit-govcms-security:
    usage: Run PHPUnit security tests.
    cmd: |
      docker compose exec govcms composer dump-autoload
      docker compose exec govcms phpunit -c web/core tests/phpunit/tests/GovCMS/Security --testdox

  phpunit-govcms-modules:
    usage: Run PHPUnit modules tests.
    cmd: |
      docker compose exec govcms composer dump-autoload
      docker compose exec govcms phpunit -c web/core tests/phpunit/tests/GovCMS/Modules --testdox

  phpunit-govcms-phpunit:
    usage: Run PHPUnit tests using the govcms-phpunit command.
    cmd: |
      docker compose exec govcms govcms-phpunit --testdox --testsuite govcms-integration

  drupal-check:
    usage: Static analysis tool to check for correctness and deprecation errors.
    cmd: docker compose exec govcms drupal-check "$@"

  cypress:
    usage: Run all Cypress tests
    cmd: |
      cd cy
      export CYPRESS_BASE_URL=http://govcms.localhost
      npx cypress run "cypress/e2e/*" --env drupalDrushCmdLine="docker compose exec govcms drush %command"

  cr:
    usage: Alias for 'cypress'
    cmd: |
      ahoy cypress

  co:
    usage: Open a new Cypress testing window
    cmd: |
      cd cy
      export CYPRESS_BASE_URL=http://govcms.localhost
      npx cypress open --env drupalDrushCmdLine="docker compose exec govcms drush %command"

  start-services:
    usage: Start the GovCMS local services
    cmd: |
      docker compose -f docker-compose.services.yml -p govcms-local-services up -d

  stop-services:
    usage: Stop the GovCMS local services
    cmd: |
      docker compose -f docker-compose.services.yml -p govcms-local-services stop

  restart-services:
    usage: Restart the GovCMS local services
    cmd: |
      docker compose -f docker-compose.services.yml -p govcms-local-services restart

  create-certs:
    usage: Generate SSL certificates for local development
    cmd: |
      mkcert -cert-file data/certs/local-cert.pem -key-file data/certs/local-key.pem packeton.govcms.localhost
      echo "Certificates generated in data/certs/ directory"